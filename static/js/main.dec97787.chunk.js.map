{"version":3,"sources":["assets/example-tracking-image.zpt","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","onNotVisible","anchor","console","log","id","onNewAnchor","onVisible","targetImage","targetFile","position","color","intensity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAe,MAA0B,mD,QCwB1BA,MApBf,WACI,OACE,eAAC,eAAD,WACE,cAAC,eAAD,IACA,cAAC,eAAD,CACEC,aAAc,SAACC,GAAD,OAAYC,QAAQC,IAAR,sBAA2BF,EAAOG,MAC5DC,YAAa,SAACJ,GAAD,OAAYC,QAAQC,IAAR,qBAA0BF,EAAOG,MAC1DE,UAAW,SAACL,GAAD,OAAYC,QAAQC,IAAR,kBAAuBF,EAAOG,MACrDG,YAAaC,EAJf,SAME,uBAAMC,SAAU,CAAC,EAAG,GAAI,GAAxB,UACE,yCACA,sCAAsBC,MAAM,iBAGhC,kCAAkBD,SAAU,CAAC,IAAK,EAAG,GAAIE,UAAW,UCL7CC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dec97787.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/example-tracking-image.775f3d2f.zpt\";","import React from 'react';\nimport { ZapparCamera, ImageTracker, ZapparCanvas } from '@zappar/zappar-react-three-fiber';\nimport targetFile from './assets/example-tracking-image.zpt'\n\nfunction App() {\n    return (\n      <ZapparCanvas>\n        <ZapparCamera />\n        <ImageTracker\n          onNotVisible={(anchor) => console.log(`Not visible ${anchor.id}`)}\n          onNewAnchor={(anchor) => console.log(`New anchor ${anchor.id}`)}\n          onVisible={(anchor) => console.log(`Visible ${anchor.id}`)}\n          targetImage={targetFile}\n        >\n          <mesh position={[0, 0, -5]}>\n            <sphereBufferGeometry />\n            <meshStandardMaterial color=\"hotpink\" />\n          </mesh>\n        </ImageTracker>\n        <directionalLight position={[2.5, 8, 5]} intensity={1.5} />\n      </ZapparCanvas>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}